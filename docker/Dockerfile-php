# syntax=docker/dockerfile:1.6
FROM php:8.2-fpm

# -------------------------------------------------------
# Dépendances système (inclut ICU + pkg-config pour intl)
# -------------------------------------------------------
RUN set -eux; \
    apt-get update; \
    apt-get install -y --no-install-recommends \
        git \
        unzip \
        zlib1g-dev \
        libxml2-dev \
        libpng-dev \
        libjpeg62-turbo-dev \
        libfreetype6-dev \
        libzip-dev \
        libicu-dev \
        pkg-config \
        g++ \
        curl \
        ca-certificates \
        openssh-client \
    ; \
    rm -rf /var/lib/apt/lists/*

# -------------------------------------------------------
# Configuration/compilation des extensions PHP
# -------------------------------------------------------
# GD doit être configuré AVANT l'installation
RUN docker-php-ext-configure gd --with-freetype --with-jpeg

# Installer les extensions (intl a besoin de libicu-dev)
RUN docker-php-ext-install -j"$(nproc)" \
    pdo_mysql \
    soap \
    zip \
    opcache \
    gd \
    intl

# -------------------------------------------------------
# Config PHP (optionnel : si ces fichiers existent dans le repo)
# -------------------------------------------------------
COPY docker/build/php/opcache.ini /usr/local/etc/php/conf.d/opcache.ini
COPY docker/build/php/custom.ini  /usr/local/etc/php/conf.d/custom.ini

# -------------------------------------------------------
# Outils dev : Composer + PHPUnit 9 (compatible PHP 8.2)
# -------------------------------------------------------
COPY --from=composer:2 /usr/bin/composer /usr/local/bin/composer

RUN curl -fsSL https://phar.phpunit.de/phpunit-9.phar -o /usr/local/bin/phpunit \
 && chmod +x /usr/local/bin/phpunit

# -------------------------------------------------------
# Droits et répertoires applicatifs
# -------------------------------------------------------
RUN usermod -u 1000 www-data \
 && usermod -a -G www-data root \
 && mkdir -p /var/www/.composer /var/www/project \
 && chown -R www-data:www-data /var/www

WORKDIR /var/www/project

# Copie du code (utilise --chown si BuildKit est actif)
COPY --chown=www-data:www-data . /var/www/project/

# (facultatif) Exposer le port FPM & healthcheck
EXPOSE 9000
HEALTHCHECK --interval=30s --timeout=3s --retries=3 CMD php-fpm -t || exit 1
